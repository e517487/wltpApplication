
package com.inetpsa.pct00.application.service.wltp;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Config", targetNamespace = "http://xml.inetpsa.com/Services/Cfg/Config", wsdlLocation = "file:/C:/PSA-Projects/wltpApplication/Config.wsdl")
public class Config_Service
    extends Service
{

    private final static URL CONFIG_WSDL_LOCATION;
    private final static WebServiceException CONFIG_EXCEPTION;
    private final static QName CONFIG_QNAME = new QName("http://xml.inetpsa.com/Services/Cfg/Config", "Config");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/PSA-Projects/wltpApplication/Config.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CONFIG_WSDL_LOCATION = url;
        CONFIG_EXCEPTION = e;
    }

    public Config_Service() {
        super(__getWsdlLocation(), CONFIG_QNAME);
    }

    public Config_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), CONFIG_QNAME, features);
    }

    public Config_Service(URL wsdlLocation) {
        super(wsdlLocation, CONFIG_QNAME);
    }

    public Config_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CONFIG_QNAME, features);
    }

    public Config_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Config_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ConfigPortType
     */
    @WebEndpoint(name = "ConfigHttpPort")
    public ConfigPortType getConfigHttpPort() {
        return super.getPort(new QName("http://xml.inetpsa.com/Services/Cfg/Config", "ConfigHttpPort"), ConfigPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConfigPortType
     */
    @WebEndpoint(name = "ConfigHttpPort")
    public ConfigPortType getConfigHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://xml.inetpsa.com/Services/Cfg/Config", "ConfigHttpPort"), ConfigPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CONFIG_EXCEPTION!= null) {
            throw CONFIG_EXCEPTION;
        }
        return CONFIG_WSDL_LOCATION;
    }

}
